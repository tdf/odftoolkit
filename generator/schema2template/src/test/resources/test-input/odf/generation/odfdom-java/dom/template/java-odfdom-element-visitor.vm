##################################################################
##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##  http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
##################################################################
##
## Begin Code
#include('copyright.txt')
/*
 * This file is automatically generated.
 * Don't edit manually.
 */
package org.odftoolkit.odfdom.dom;

import org.odftoolkit.odfdom.pkg.ElementVisitor;
import org.odftoolkit.odfdom.pkg.OdfElement;
##
#foreach ($element in ${xmlModel.getElements().withoutMultiples()})
#if ($element != "*")
#set ($namespacePrefix = ${element.getNamespacePrefix()})
#set ($className = "${xmlModel.camelCase($element)}Element")
import org.odftoolkit.odfdom.dom.element.${namespacePrefix}.${className};
#end
#end
##

/**
 * A default visitor for DOM layer elements.
 * <p> It implements the interface of DomVisitor in package layer.</p>
 * <p> It provides element process method for some special elements. </p>
 *
 */
public abstract class DefaultElementVisitor implements ElementVisitor {

	@Override
	abstract public void visit(OdfElement element);
#foreach ($element in ${xmlModel.getElements().withoutMultiples()})
#if ($element != "*")
#set ($className = "${xmlModel.camelCase($element)}Element")

	/**
	 * A method to visit "${element.getQName()}" elements
	 * @param ele - an instance of $className
	 */
	public void visit($className ele) {
		visit((OdfElement) ele);
	}
#end
#end
}
